*     ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
*     ||                                                              ||
*     ||                    DIAGN Code Project.                       ||
*     ||                                                              ||
*     ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
*
      SUBROUTINE DIAGN(Y,PRESR,TEMPR,RCKWRKR,ICKWRKR,CCKWRKR,LENIWKR,
     1             LENRWKR,LENCWKR,NGPNTMAXR,NELEMMAXR,NSPECMAXR,
     2             NREACMAXR, NELEMR,NSPECR,NREACR,NGPNTR,KNAMER,IECMR,
     3             SCMR,XINDEXR,IT)
*
*     ==================================================================
*     - PURPOSE:
*     - HISTORY: 
*        ddmmyy  Programmer  Task
*        ------  ----------  ----
*        241106  JIM         V3-Public release
*                
*     - HISTORY: 
*        ddmmyy  Programmer  Task
*        ------  ----------  ----
*        241106  JIM         V3-Public release
*                
*     - ARGUMENTS:
*     - INPUT:
*     - OUTPUT:
*     - INPUT/OUTPUT:
*     - CALLS:
*         Call various CHEMKIN subroutines:
*          - CKLEN
*          - CKINIT
*          - CKINDX
*          - CKSYMS
*          - CKNCF
*          - CKNU
*          - CKWT
*     
*     - GENERAL DESCRIPTION:
*         Input Files:
*          - <paramet.i>     with parameters for program and mechanism.
*          - <input.dat>     with other operating parameters.
*          - <chkint.lnk>    link file generated by Chemkin. 
*          - <solution.dat>  continuation file generated by RUN-1DL.
*     
*     - OTHER COMMENTS:
*      This code should be MIL-STD-1753 extended ANSI-77 compliant.
*     ==================================================================
*
      IMPLICIT DOUBLE PRECISION (A-H,O-Z), INTEGER (I-N)
      INCLUDE 'param_diagn.i'
      
      DIMENSION Y(NSPECMAXR)
      DIMENSION Z(NSPECMAXR)
      DIMENSION RCKWRKR(LENRWKR)
      DIMENSION ICKWRKR(LENIWKR)
      DIMENSION IECMR (NELEMMAXR,NSPECMAXR)
      DIMENSION SCMR (NSPECMAXR,NREACMAXR)
      DIMENSION WRSCM(NSPECMAX,NR2)            ! W*S
      DIMENSION WSR  (NSPECMAX,NR2)           ! W*S*R
      DIMENSION WTR    (NSPECMAXR)
      DIMENSION RAJAC(2*NREACMAXR,NSPECMAXR)  ! Jacobian of rates w.r.t. Z
      DIMENSION TRAJAC(2*NREACMAXR,NSPECMAXR)  ! Jacobian of rates w.r.t. Z
      DIMENSION GR (2*NREACMAXR)              ! Reaction Rates
      DIMENSION GRT(2*NREACMAXR)              ! Rates of Temp dT/dt
      DIMENSION QR(NSPECMAXR,NSPECMAXR)       ! Molecular Weights (Diagonal)
      DIMENSION BQR(1,NSPECMAXR)              ! Molecular Weights (Diagonal)
      DIMENSION BQR2(1,NSPECMAXR)              ! Molecular Weights (Diagonal)
      DIMENSION WW(NSPECMAXR,NSPECMAXR)       ! Molecular Weights (Diagonal)
      DIMENSION GAA(2*NREACMAXR,NSPECMAXR)    ! RAJAC*ALPHA
CJIM      DIMENSION TABLE1(NGPNTMAXR,NSPECMAXR,2) ! Eigenvalues,lamda
CJIM      DIMENSION TABLE2(NSPECMAXR,2*NREACMAXR) ! Participation Index for lamda
      DIMENSION G     (NSPECMAXR)             ! G(Z) = S(Z,J)*R(J)
      DIMENSION BS(NSPECMAXR,2*NREACMAXR)     ! BETTA*S(Z,J)
      DIMENSION BHS(NSPECMAXR,2*NREACMAXR)    ! BHAT*S(Z,J)
      DIMENSION BSR(NSPECMAXR,2*NREACMAXR)    ! BETTA*S(Z,J)*R(J)
      DIMENSION BSRC(NSPECMAXR,2*NREACMAXR)   ! BETTA*S(Z,J)*R(J)(USED FOR BSR's)
      DIMENSION FI(7,NSPECMAX)                ! Amplitudes, Fi
      DIMENSION BSE(NSPECMAXR,2*NREACMAXR)    ! BETTA*S(Z,J)*GA(J,Z)*ALPHA
      DIMENSION BSEC(NSPECMAXR,2*NREACMAXR)   ! BETTA*S(Z,J)*GA(J,Z)*ALPHA (USED FOR C's)
      DIMENSION RJAC(NSPECMAXR,NSPECMAXR)     ! JACOBIAN OF G(Z) WITH RESPECT TO Z
      DIMENSION WKN1(NSPECMAXR)               ! WORKING ARRAYCJIM
CJIM
CJIM
      DIMENSION WKN2(NSPECMAXR)               ! WORKING ARRAY
      DIMENSION WKN3(2*NREACMAXR)             ! WORKING ARRAY
      DIMENSION ALPHA(NSPECMAXR,NSPECMAXR)    ! RIGHT EIGENVECTORS
      DIMENSION BETTA(NSPECMAXR,NSPECMAXR)    ! LEFT  EIGENVECTORS
      DIMENSION BBAA(NSPECMAXR,NSPECMAXR)     ! BETTA*ALPHA
      DIMENSION REIM(NSPECMAXR,2)             ! REAL AND IMAGINARY
      DIMENSION RLMOD(NSPECMAXR)              ! MODULI OF THE EIGENVALUES
      DIMENSION AB(NSPECMAXR,NSPECMAXR)            
      DIMENSION AHAT(NSPECMAX,NSPECMAX)
      DIMENSION BHAT(NSPECMAX,NSPECMAX)
      DIMENSION IRC(NSPECMAX)                 ! real or complex eig. index
      DIMENSION AHELP(NSPECMAXR,NSPECMAXR)
      DIMENSION BHELP(NSPECMAXR,NSPECMAXR)
      DIMENSION AN(NSPECMAXR,NSPECMAXR)     ! AHELP*BHELP
      DIMENSION ANW(NSPECMAXR,NSPECMAXR)    ! AHELP*BHELP*W
      DIMENSION ANWS(NSPECMAXR,2*NREACMAXR) ! AHELP*BHELP*W*S(Z,J)
      DIMENSION ANWR(NSPECMAXR,2*NREACMAXR) ! AHELP*BHELP*W*S(Z,J)*R(J)
      DIMENSION AIMP(NSPECMAXR)             ! Array for Importance Index
      DIMENSION GAIMP(NSPECMAXR)            ! Array for Importance Index
      DIMENSION AY(NSPECMAX,NSPECMAX)
      DIMENSION BY(NSPECMAX,NSPECMAX)
      DIMENSION POINT(NSPECMAX,NSPECMAX)
      DIMENSION TEMP1(NSPECMAX)
      DIMENSION TEMP2(NSPECMAX)
      DIMENSION TEMP3(NSPECMAX)
      DIMENSION XTEMP(NSPECMAX)
      DIMENSION YERROR(NSPECMAX)
      DIMENSION SUMH(NSPECMAX)
      DIMENSION HELP1(NSPECMAX,1)
      DIMENSION HELP2(1,NSPECMAX)
      DIMENSION HELP3(NSPECMAX,NR2)
      
      
c________________ANALYTIC  JACOBIANS____________________________!
      DIMENSION Zd(NSPECMAXR)									!
      DIMENSION Gd(NSPECMAXR)									!
      double precision jac_anal(NSPECMAXR,NSPECMAXR)			!
      															!
      DIMENSION GRd(2*NREACMAXR)								!
      DIMENSION GRTd(2*NREACMAXR)								!
      double precision RAJAC_anal(2*NREACMAXR,NSPECMAXR)		!
      double precision TRAJAC_anal(2*NREACMAXR,NSPECMAXR)       ! Jacobian of rates w.r.t. Z
c_______________________________________________________________!	
*
*
      LOGICAL KERR1,KERR2,KERR3,KERR4,KERR5,KERR6,KERR7
      CHARACTER   CPRINT*79
      CHARACTER   CCKWRK (LENCWKR)*16
      CHARACTER   CCKWRKR(LENCWKR)*16
      CHARACTER   KNAME (NSPECMAXR)*16
      CHARACTER   KNAMER(NSPECMAXR)*16
      CHARACTER   FL_OUT(NSPECMAXR)*40
      CHARACTER   SP
      CHARACTER   CHELP*16
      INTEGER     FLWR
*
      COMMON /DENSR/ RR
      COMMON/BAHAT/ AHAT, BHAT, IRC
      EXTERNAL GVECTOR_D
      EXTERNAL GRATES_D
      
      
      EPSFCN = 0.0D0
      SMALL = 1.0D-20
      DSMALL = 1.0D-10
      
      
c________________ANALYTIC  JACOBIANs____________________________!
      do i = 1, NSPEC+1											!
        do j = 1, NSPEC+1										!
          jac_anal(j,i) = 0.0D0									!
        enddo													!
      enddo														!
          
          
      do i = 1, 2*NREAC											!
        do j = 1, NSPEC+1										!          
          RAJAC_anal(i,j) = 0.0D0								!
          TRAJAC_anal(i,j) = 0.0D0								!
        enddo													!
      enddo														!
c_______________________________________________________________!

*     ==================================================================
      IF(IT.EQ.1) THEN
      
CJIM      OPEN(99,file='./DIAGN/PPPF',form='formatted',
CJIM     1               status='unknown')
CJIM      OPEN(71,file='./DIAGN/Gvector',form='formatted',
CJIM     1               status='unknown')
      OPEN(72,file='./DIAGN/Eigenvalues',form='formatted',
     1               status='unknown')
      OPEN(83,file='./DIAGN/Timescales',form='formatted',
     1               status='unknown')
      OPEN(73,file='./DIAGN/Rates',form='formatted',
     1               status='unknown')
CJIM      OPEN(74,file='./DIAGN/ModeParInd',form='formatted',
CJIM     1               status='unknown')
CJIM      OPEN(75,file='./DIAGN/EigeParInd',form='formatted',
CJIM     1               status='unknown')
CJIM      OPEN(76,file='./DIAGN/Pointers',form='formatted',
CJIM     1               status='unknown')
      OPEN(77,file='./DIAGN/Amplitudes',form='formatted',
     1               status='unknown')
CJIM      OPEN(78,FILE='./DIAGN/AHAT',FORM='FORMATTED',
CJIM     1               status='unknown')
CJIM      OPEN(79,FILE='./DIAGN/BHAT',FORM='FORMATTED',
CJIM     1               status='unknown')
CJIM      OPEN(80,FILE='./DIAGN/ABS_AMPL',FORM='FORMATTED',
CJIM     1               status='unknown')
CJIM      OPEN(81,FILE='./DIAGN/AY',FORM='FORMATTED',
CJIM     1               status='unknown')
CJIM      OPEN(82,FILE='./DIAGN/BY',FORM='FORMATTED',
CJIM     1               status='unknown')
      OPEN(84,FILE='./DIAGN/M',FORM='FORMATTED',
     1               status='unknown')
CJIM      OPEN(85,FILE='./DIAGN/ImpInd',FORM='FORMATTED',
CJIM     1               status='unknown')
CJIM      OPEN(86,FILE='./DIAGN/ALPHA',FORM='FORMATTED',
CJIM     1               status='unknown')
CJIM      OPEN(87,FILE='./DIAGN/BETTA',FORM='FORMATTED',
CJIM     1               status='unknown')
CJIM      OPEN(88,FILE='./DIAGN/BHAT_S',FORM='FORMATTED',
CJIM     1               status='unknown')
CJIM      OPEN(89,FILE='./DIAGN/QSSA',FORM='FORMATTED',
CJIM     1               status='unknown')
CJIM      OPEN(95,FILE='./DIAGN/45MODES_G',FORM='FORMATTED',
CJIM     1               status='unknown')
CJIM     
      OPEN(96,FILE='./DIAGN/RatesT',FORM='formatted',
     1                status='unknown')

      ELSE
CJIM      
CJIM      OPEN(99,file='./DIAGN/PPPF',form='formatted',
CJIM     1                access='append')
CJIM      OPEN(71,file='./DIAGN/Gvector',form='formatted',
CJIM     1                access='append')
      OPEN(72,file='./DIAGN/Eigenvalues',form='formatted',
     1                access='append')
      OPEN(83,file='./DIAGN/Timescales',form='formatted',
     1                access='append')
      OPEN(73,file='./DIAGN/Rates',form='formatted',
     1                access='append')
CJIM      OPEN(74,file='./DIAGN/ModeParInd',form='formatted',
CJIM     1                access='append')
CJIM      OPEN(75,file='./DIAGN/EigeParInd',form='formatted',
CJIM     1                access='append')
CJIM      OPEN(76,file='./DIAGN/Pointers',form='formatted',
CJIM     1                access='append')
      OPEN(77,file='./DIAGN/Amplitudes',form='formatted',
     1                access='append')
CJIM      OPEN(78,FILE='./DIAGN/AHAT',FORM='FORMATTED',
CJIM     1                access='append')
CJIM      OPEN(79,FILE='./DIAGN/BHAT',FORM='FORMATTED',
CJIM     1                access='append')
CJIM      OPEN(80,FILE='./DIAGN/ABS_AMPL',FORM='FORMATTED',
CJIM     1                access='append')
CJIM      OPEN(81,FILE='./DIAGN/AY',FORM='FORMATTED',
CJIM     1                access='append')
CJIM      OPEN(82,FILE='./DIAGN/BY',FORM='FORMATTED',
CJIM     1                access='append')
      OPEN(84,FILE='./DIAGN/M',FORM='FORMATTED',
     1               access='append')
CJIM      OPEN(85,FILE='./DIAGN/ImpInd',FORM='FORMATTED',
CJIM     1               access='append')
CJIM      OPEN(86,FILE='./DIAGN/ALPHA',FORM='FORMATTED',
CJIM     1               access='append')
CJIM      OPEN(87,FILE='./DIAGN/BETTA',FORM='FORMATTED',
CJIM     1               access='append')
CJIM      OPEN(88,FILE='./DIAGN/BHAT_S',FORM='FORMATTED',
CJIM     1               access='append')
CJIM      OPEN(89,FILE='./DIAGN/QSSA',FORM='FORMATTED',
CJIM     1               access='append')
CJIM      OPEN(95,FILE='./DIAGN/45MODES_G',FORM='FORMATTED',
CJIM     1               access='append')
      OPEN(96,FILE='./DIAGN/RatesT',FORM='formatted',
     1                access='append')

      ENDIF      
*
      SP=CHAR(9)
      CPRINT='----------------------------------------------------------
     &------'
      
      KERR1=LENIWK.NE.LENIWKR
      KERR2=LENRWK.NE.LENRWKR
      KERR3=LENCWK.NE.LENCWKR
      KERR4=NGPNTMAX.NE.NGPNTMAXR
      KERR5=NELEMMAX.NE.NELEMMAXR
      KERR6=NSPECMAX.NE.NSPECMAXR
      KERR7=NREACMAX.NE.NREACMAXR
      
      IERR=0
      IF (KERR1.OR.KERR2.OR.KERR3.OR.KERR4.OR.KERR5.OR.KERR6.OR.
     1    KERR7) THEN
     
      WRITE(LOUT,100) CPRINT
      WRITE(LOUT,*)'YOU HAVE TO DEFINE THE PARAMETER VALUES IN',
     1             'FILE param_diagn.i AS THEY ARE DEFINED IN CODE'
      WRITE(LOUT,107) LENIWKR
      WRITE(LOUT,108) LENRWKR
      WRITE(LOUT,109) LENCWKR
      WRITE(LOUT,110) NGPNTMAXR
      WRITE(LOUT,111) NELEMMAXR
      WRITE(LOUT,112) NSPECMAXR
      WRITE(LOUT,113) NREACMAXR
      WRITE(LOUT,100) CPRINT
      STOP

      ENDIF
      
      PRES=PRESR
      TEMP=TEMPR
      XINDEX=XINDEXR
      NELEM=NELEMR
      NSPEC=NSPECR
      NREAC=NREACR
      NGPNT=NGPNTR	
      
      DO I=1,LENRWK
      RCKWRK(I)=RCKWRKR(I)
      ENDDO
      
      DO I=1,LENIWK
      ICKWRK(I)=ICKWRKR(I)
      ENDDO
      
      DO I=1,LENCWK
      CCKWRK(I)=CCKWRKR(I)
      ENDDO
      
      
      DO I=1,NSPECMAX
c         WT(I)=WTR(I)*1.d3
         KNAME(I)=KNAMER(I)
         DO J=1,NELEMMAX
	    IECM(J,I)=IECMR(J,I)
         ENDDO
	 
         DO K=1,NREACMAX
	 SCM(I,K)=SCMR(I,K)
         ENDDO	 
      ENDDO
C----------------------------------------------------------------------C
C     MOLECULAR WEIGHTS EVALUATION  ! (gr/mole)
C----------------------------------------------------------------------C  
      CALL CKWT(ICKWRK,RCKWRK,WT)
C----------------------------------------------------------------------C
C     SPECIES CONSERVATION EQUATIONS
C      
        DO I=1,NSPEC
         DO J=1,NREAC
          RSCM(I,J)       =   SCM(I,J)
          RSCM(I,NREAC+J) = - SCM(I,J)
         END DO
        END DO
C        DO I=1,NSPEC
C	WRITE(90,701) I,(SCM(I,J),J=1,NREAC)
C	WRITE(90,701) I,(RSCM(I,J),J=1,2*NREAC)
C        END DO
C	stop
C701   FORMAT(1X,I6,2X, 800(D13.6,1X))

C----------------------------------------------------------------------C
C     ELEMENTS CONSERVATION EQUATIONS
C  
        DO I=1,NELEM
         DO J=1,NSPEC
          RECM(I,J)     =  1.D0* IECM(I,J)
         END DO
        END DO
C----------------------------------------------------------------------C
C     DENSITY EVALUATION
C----------------------------------------------------------------------C
         DO K=1,NSPEC
            Z(K)=Y(K)              ! SPECIES MASS FRACTIONS.
         END DO
	  TEMP=TEMPR	 

           CALL   CKRHOY (PRES, TEMP, Z, ICKWRK, RCKWRK, RR)
	   RR=1.d3*RR             ! (kg/m**3) ???
C
C     ------------------------------------------------------------------
C        FORM THE VECTOR OF THE UNKNOWNS Z
C        EVALUATE G(Z) = S(Z,J)*R(J) AT CURRENT Z
C        Warning: G gets modified after calling <FDJAC1>. 
C        The same happens with R so we must call <GVECTOR> afterwards.
C     ------------------------------------------------------------------
C
         DO K=1,NSPEC
            Z(K)=Y(K)              ! SPECIES MASS FRACTIONS.
         END DO
       TEMP=TEMPR	 
       Z(NSPEC+1)= TEMP

       CALL GVECTOR_T(Z,G)

C     ------------------------------------------------------------------
C        EVALUATE THE JACOBIAN OF G(Z) WITH RESPECT TO Z16
C           RJAC(I,J) = [ DG(I)/DZ(J) ],
C        WHERE I,J = 1,...,NSPEC.
C     ------------------------------------------------------------------

       CALL FDJAC1
     &   (GVECTOR_T,NSPEC+1,Z,G,RJAC,NSPECMAX,NSPEC+1,NSPEC+1,EPSFCN,
     1    WKN1,WKN2)
C
         DO K=1,NSPEC
            Z(K)=Y(K)              ! SPECIES MASS FRACTIONS.
         END DO
       TEMP=TEMPR
       Z(NSPEC+1)= TEMP
	  

       CALL GVECTOR_T(Z,G)															! G (rhs)



CMANIAS=================================================================================!    APO DW KAI KATW OI ALLAGES!!
cstathis      do i = 1, NSPEC+1																	!
cstathis        Zd(i) = 0.0d0																	!
cstathis      enddo																				!
																						!
cstathis      do i = 1, NSPEC+1																	!
c        analytical derivative with respect to variable i								!
cstathis        Zd(i) = 1.0d0																	!
cstathis        CALL GVECTOR_T_D(Z, ZD, G, GD)													!
        
C        construct Jacobian columnwise 
cstathis        do j = 1, NSPEC+1
cstathis          jac_anal(j,i) = GD(j)
cstathis        enddo
c       reset Zd to compute the next column correctly
cstathis        Zd(i) = 0.0d0																	!
cstathis      enddo																				!
C=======================================================================================!
c   		write (*,*) '---------GVECTOR_T_D----------'
c   		write (*,*) G

CV	WRITE(*,*) ' '
CV	WRITE(*,*) '   -------G--------       -----------G_anal-------',
CV     &           '    --------DIFF-----'
	
CV	do i=1, nspec+1
CV	write(*,*) G(I), G_anal(I), G(I)-G_anal(I) 
CV	enddo     
     


c		do i=1,NSPEC+1
c    		write (*,"(100g15.5)") (jac_anal(i,j), j=1,NSPEC+1)
c		enddo

CMANIAS=================================================================================!    Grafei tin Jacobian gia kathe xrono sto fort.98
c         DO K=1,NSPEC+1	 															!
c		 write (98,200)  (jac_anal(K,KK), KK=1,NSPEC+1)	 	  	 						!
c         END DO																		!

c       do j = 1, NSPEC+1            !    NO TEMPERATURE
c          RJAC(j,NSPEC+1) = 0.0d0    !
c          RJAC(NSPEC+1,j) = 0.0d0    !
c       enddo


C
C     ------------------------------------------------------------------
C       GIVEN THE JACOBIAN  [RJAC(NSPEC,NSPEC)] EVALUATE:
C       MODULI OF EIGENVALUES         [ RLMOD(NSPEC)       ] 
C       REAL      PART OF EIGENVALUES [ REIM(NSPEC,1)      ]
C       IMAGINARY PART OF EIGENVALUES [ REIM(NSPEC,2)      ]
C       LEFT  EIGENVECTORS            [ BETTA(NSPEC,NSPEC) ]
C       RIGHT EIGENVECTORS            [ ALPHA(NSPEC,NSPEC) ]
C     ------------------------------------------------------------------
C
         CALL EIGEN_D(RJAC,ALPHA,BETTA,RLMOD,REIM)
	 
CTCT	  WRITE(72,102) XINDEX,SP,(REIM(I,1),SP,REIM(I,2),SP,I=1,NSPEC)
CTCT	  WRITE(83,101) XINDEX,SP,(1.d0/(RLMOD(I)+1.d-15),SP,I=1,NSPEC)



c      OPEN(98,file='AA_BETTA',form='formatted',access='append')
c      OPEN(99,file='AA_ALPHA',form='formatted',access='append')

c         DO K=1,NSPEC+1	 
c		 write (98,200)  (BETTA(K,KK), KK=1,NSPEC+1)	 	  	 
c         END DO
c		 write (98,*)  '---------------------------------------------'	 	  	 
c		 write (98,*)  '  '	 	  	 
c		 write (98,*)  '  '	 	  	 

c         CLOSE(98)
         
         
c         DO K=1,NSPEC+1	 
c    	 write (99,200)  (ALPHA(K,KK), KK=1,NSPEC+1)	 	  	 
c         END DO
c		 write (99,*)  '---------------------------------------------'	 	  	 
c		 write (99,*)  '  '	 	  	 
c		 write (99,*)  '  '	 	  	 

c         CLOSE(99)

C============================EIGENVALUES====================================
C      WRITE(72,102) XINDEX,SP,(REIM(I,1),SP,REIM(I,2),SP,I=1,NSPEC+1)

      WRITE(72,101,ADVANCE = 'NO') XINDEX
      DO I = 1,NSPEC+1

      WRITE(72,102,ADVANCE = 'NO') I,REIM(I,1),REIM(I,2)
      ENDDO

      CLOSE(72)
c       RETURN

C============================TIMESCALES====================================
C      WRITE(83,101) XINDEX,SP,(1.d0/(RLMOD(I)+1.d-15),SP,I=1,NSPEC+1)

      WRITE(83,101,ADVANCE = 'NO') XINDEX
      DO I = 1,NSPEC+1

      WRITE(83,103,ADVANCE = 'NO') I, 1.0D+00/(RLMOD(I) + 1.0D-30)
      ENDDO

      CLOSE(83)
C===========================================================================

      RETURN

C     ------------------------------------------------------------------
C        EVALUATE THE MATRIX BS(J,K) = BETTA(J,L)*W(L,L)*RSCM(L,K)
C        WHERE J=1,...,NSPECMAX, K=1,...,NR2, AND L=1,...,NSPECMAX
C     ------------------------------------------------------------------
C
         DO J=1,NSPEC
              DO K=1,NSPEC
                 WW(J,K) = 0.0d0
              END DO
            WW(J,J)=WT(J)
cv            write(*,*) 'w', WT(J)
         END DO
C
         CALL SMULT
     &    (NSPECMAX,NSPECMAX,NR2,WW,RSCM,WRSCM,NSPEC,NSPEC,(2*NREAC))

        
C
CC         CALL SMULT
CC     &    (NSPECMAX,NSPECMAX,NR2,BETTA,WRSCM,BS,NSPEC,NSPEC,(2*NREAC))				!  Den upologizei to BS!!!
C																						!  Mono to S(=WS)
C     ------------------------------------------------------------------
C        FORM THE VECTOR OF THE UNKNOWNS Z
C        EVALUATE GR(J) AT CURRENT Z
C        Warning: GR gets modified after calling <FDJAC2>. 
C     -----------------------------------------------------------------81-
C
         DO K=1,NSPEC
            Z(K)=Y(K)             ! SPECIES MASS FRACTIONS.
         END DO
            TEMP=TEMPR
         Z(NSPEC+1)= TEMP
	    
c
c
         CALL GRATES_T(Z,GR)

CMANIAS==============================RAJAC_anal=========================================! Analytically
c      do i = 1, NSPEC+1																	!
c        Zd(i) = 0.0d0																	!
c      enddo																				!
c																						!
c      do i = 1, NSPEC+1																	!
cc        analytical derivative with respect to variable i								!
c        Zd(i) = 1.0d0																	!
c        CALL GRATES_T_D(Z,Zd,GR,GRd)
c        
cC        construct Jacobian RAJAC_anal columnwise 
c        do j = 1, 2*NREAC
c          RAJAC_anal(j,i) = GRd(j)
c        enddo
cc       reset Zd to compute the next column correctly
c        Zd(i) = 0.0d0																	!
c      enddo																				!
C=======================================================================================!

C
C     ------------------------------------------------------------------
C        EVALUATE THE JACOBIAN OF GR(Z) WITH RESPECT TO Z
C           RAJAC(I,J) = [ DGR(I)/DZ(J) ],
C        WHERE I=1,...,NR2,  J = 1,...,NSPEC.
C     ------------------------------------------------------------------
C
        CALL FDJAC2
     &    (GRATES_T,NSPECMAX,NR2,Z,GR,RAJAC,NR2,EPSFCN,WKN3)




C===============================GRATES==================================
C         WRITE(73,103) XINDEX,SP,(GR(I),SP,I=1,2*NREAC)

      WRITE(73,101,ADVANCE = 'NO') XINDEX

      DO I = 1,2*NREAC
      WRITE(73,103,ADVANCE = 'NO') I, GR(I)
      ENDDO

      CLOSE(73)

C	  RETURN
C=======================================================================


C
C     ------------------------------------------------------------------
C        EVALUATE THE JACOBIAN OF GR(Z) WITH RESPECT TO Z
C           RAJAC(I,J) = [ DGR(I)/DZ(J) ],
C        WHERE I=1,...,NR2,  J = 1,...,NSPEC.
C     ------------------------------------------------------------------
C
CMANIAS         CALL FDJAC2
CMANIAS     &    (GRATES_T,NSPECMAX,NR2,Z,GR,RAJAC,NR2,EPSFCN,WKN3)

CV	WRITE(*,*) '-------RAJAC--------    -----------RAJAC_ANAL-------',
CV     &           '  --------DIFF-----'
	
CV	do i=1, 2*nreac
CV	write(*,*) RAJAC(I,1), RAJAC_ANAL(I,1), RAJAC(I,1)-RAJAC_ANAL(I,1) 
CV	enddo     
     
     
     
CMANIAS=================================================================================!	TYPWNEI THN RAJAC
c         DO N=1,NR2																	!	STO ARXEIO fort.28
c         write (28,200)  (RAJAC(N,KK), KK=1,NSPEC+1)									!
c         END DO																		!

          
         DO K=1,NSPEC
            Z(K)=Y(K)             ! SPECIES MASS FRACTIONS.
         END DO
            TEMP=TEMPR
         Z(NSPEC+1)= TEMP


CMANIAS==============================TRAJAC_anal=========================================! Analytically 
c      do i = 1, NSPEC+1																	!
c        Zd(i) = 0.0d0																	!
c      enddo																				!
c																						!
c      do i = 1, NSPEC+1																	!
cc        analytical derivative with respect to variable i								!
c        Zd(i) = 1.0d0																	!
c        CALL TGRATES_D(Z, Zd, GRT, GRTd)
c        
cC        construct Jacobian RAJAC_anal columnwise 
c        do j = 1, 2*NREAC
c          TRAJAC_anal(j,i) = GRTd(j)
c        enddo
cc       reset Zd to compute the next column correctly
c        Zd(i) = 0.0d0																	!
c      enddo																				!
C=======================================================================================!

       CALL TGRATES(Z,GRT)
C
C     ------------------------------------------------------------------
C        EVALUATE THE JACOBIAN OF GRT(Z) WITH RESPECT TO Z
C           TRAJAC(I,J) = [ TFACT(J)*DGR(I)/DZ(J) ],
C        WHERE I=1,...,NR2,  J = 1,...,NSPEC.
C     ------------------------------------------------------------------
C
       CALL FDJAC2
     &    (TGRATES,NSPECMAX,NR2,Z,GRT,TRAJAC,NR2,EPSFCN,WKN3)



C
C     ------------------------------------------------------------------
C        EVALUATE THE JACOBIAN OF GRT(Z) WITH RESPECT TO Z
C           TRAJAC(I,J) = [ TFACT(J)*DGR(I)/DZ(J) ],
C        WHERE I=1,...,NR2,  J = 1,...,NSPEC.
C     ------------------------------------------------------------------
C

CMANIAS        CALL FDJAC2
CMANIAS     &    (TGRATES,NSPECMAX,NR2,Z,GRT,TRAJAC,NR2,EPSFCN,WKN3)


cv	WRITE(*,*) ' '
cv	WRITE(*,*) '-------TRAJAC--------    -----------TRAJAC_ANAL-----',
cv     &           '  --------DIFF-----'
	
cv	do i=1, 2*nreac
cv	write(*,*) TRAJAC(I,1), TRAJAC_ANAL(I,1),
cv     &         TRAJAC(I,1)-TRAJAC_ANAL(I,1) 
cv	enddo     


C         DO NNN=1,NR2
C         write (29,200)  (TRAJAC(NNN,KK), KK=1,NSPEC+1)
C         END DO

C*******************************************************************************
C*******************************************************************************
C******************START OF LOOP FOR THE k-th ELEMENTARY REACTION***************
C*******************************************************************************
C*******************************************************************************

      DO K=1,(2*NREAC)
      
         DO I=1,NSPEC
         HELP1(I,1)=WRSCM(I,K)															! S = w*s
         ENDDO 
         
         DO I=1,NSPEC+1
         HELP2(1,I)=RAJAC(K,I)
         ENDDO 
              
         CALL SMULT
     &    (NSPECMAX,1,NSPECMAX,HELP1,HELP2,QR,NSPEC,1,NSPEC+1)  						! S* grad(R)
CCCCCCCC         WRITE(*,*) K
            
         DO I=1,NSPEC+1
         QR(NSPEC+1,I)=TRAJAC(K,I)
         ENDDO 
         
C         IF (K.GE.2150.AND.K.LT.2154) THEN
C         
C         DO N=1,NSPEC+1
C         write (K-2120,200)  (QR(N,KK), KK=1,NSPEC+1)
C         END DO
         
         
C         ENDIF
         
C     ------------------------------------------------------------------
         IC=0  
C-------------------------------------------------------------------------------
C------------------START OF LOOP FOR THE i-th COMPONENT (MODE)------------------
C-------------------------------------------------------------------------------
         DO I=1,NSPEC+1
         IC=IC+1
         
         IF (IRC(IC).EQ.0) THEN
C>>>>>>>>>>>>>>>>>>START CASE FOR REAL EIGENVALUE>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
         DO J=1,NSPEC+1
         HELP2(1,J)=BETTA(IC,J)
         ENDDO 
         
           CALL SMULT
     &     (1,NSPECMAX,NSPECMAX,HELP2,QR,BQR,1,NSPEC+1,NSPEC+1)
           SUM1=0.D0
           DO J=1,NSPEC+1
           SUM1=SUM1+BQR(1,J)*ALPHA(J,IC)
           ENDDO 
           BSE(IC,K)=SUM1
C>>>>>>>>>>>>>>>>>>END CASE FOR REAL EIGENVALUE>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
           ELSE
C<<<<<<<<<<<<<<<<<<START CASE FOR A PAIR OF COMPLEX CONJUGATE EIGENVALUES<<<<<<<
           TSUM1=0.d0
           TSUM2=0.d0
		 
           DO J=1,NSPEC+1
           HELP2(1,J)=BETTA(IC,J)
           ENDDO 
           CALL SMULT
     &     (1,NSPECMAX,NSPECMAX,HELP2,QR,BQR,1,NSPEC+1,NSPEC+1)
           SUM1=0.D0
           DO J=1,NSPEC+1
           SUM1=SUM1+BQR(1,J)*ALPHA(J,IC)
           ENDDO 
		   
           TSUM1=TSUM1+SUM1
		   
           SUM1=0.D0
           DO J=1,NSPEC+1
           SUM1=SUM1+BQR(1,J)*ALPHA(J,IC+1)
           ENDDO
		    
           TSUM2=TSUM2+SUM1
		   
         DO J=1,NSPEC+1
         HELP2(1,J)=BETTA(IC+1,J)
         ENDDO 
           CALL SMULT
     &     (1,NSPECMAX,NSPECMAX,HELP2,QR,BQR2,1,NSPEC+1,NSPEC+1)
           SUM1=0.D0
           DO J=1,NSPEC+1
           SUM1=SUM1+BQR2(1,J)*ALPHA(J,IC+1)
           ENDDO 
		   
           TSUM1=TSUM1+SUM1
		   
           SUM1=0.D0
           DO J=1,NSPEC+1
           SUM1=SUM1+BQR2(1,J)*ALPHA(J,IC)
           ENDDO
		    
           TSUM2=TSUM2-SUM1
		   
		 
          BSE(IC,K)=0.5d0*TSUM1
          BSE(IC+1,K)=0.5d0*TSUM2				   	   
  
C<<<<<<<<<<<<<<<<<<END CASE FOR A PAIR OF COMPLEX CONJUGATE EIGENVALUES<<<<<<<<<
          ENDIF
          IF(IC.EQ.(NSPEC+1)) EXIT
         ENDDO 
C-------------------------------------------------------------------------------
C------------------END OF LOOP FOR THE i-th COMPONENT (MODE)--------------------
C-------------------------------------------------------------------------------
      ENDDO     
C*******************************************************************************
C*******************************************************************************
C******************END OF LOOP FOR THE k-th ELEMENTARY REACTION*****************
C*******************************************************************************
C*******************************************************************************

     
C
CC         CALL SMULT
CC     &    (NR2,NSPECMAX,NSPECMAX,RAJAC,ALPHA,GAA,(2*NREAC),NSPEC,NSPEC)
C
C     ------------------------------------------------------------------
C        CONSTRUCT THE MODE-PARTICIPATION INDEX OF THE N-E MODES
C     ------------------------------------------------------------------
         DO K=1,NSPEC
            Z(K)=Y(K)             ! SPECIES MASS FRACTIONS.
         END DO
            TEMP=TEMPR
         Z(NSPEC+1)= TEMP
	    
         CALL GRATES_T(Z,GR)
C
         DO K=1,NSPEC
            Z(K)=Y(K)             ! SPECIES MASS FRACTIONS.
         END DO
            TEMP=TEMPR
         Z(NSPEC+1)= TEMP
	    
         CALL TGRATES(Z,GRT)

        DO J=1,NSPEC
	     DO I=1,2*NREAC
	         HELP3(J,I)=WRSCM(J,I)*GR(I)
	     ENDDO
	ENDDO
        
        DO I=1,2*NREAC
            HELP3(NSPEC+1,I)=GRT(I)
        ENDDO

         CALL SMULT
     &    (NSPECMAX,NSPECMAX,NR2,BETTA,HELP3,BSR,NSPEC+1,NSPEC+1,
     &    (2*NREAC))
     
c         OPEN(97,file='AA_WS',form='formatted',access='append')
c         DO K=1,NSPEC+1	 
c		 write (97,201)  (WRSCM(K,KK), KK=1,2*NREAC)	 	  	 
c         END DO
c		 write (97,*)  '---------------------------------------------'	 	  	 
c		 write (97,*)  '  '	 	  	 
c		 write (97,*)  '  '	 	  	 

c         CLOSE(97)
         
c         OPEN(95,file='AA_WSR',form='formatted',access='append')
c         DO K=1,NSPEC+1	 
c		 write (95,201)  (HELP3(K,KK), KK=1,2*NREAC)	 	  	 
c         END DO
c		 write (95,*)  '---------------------------------------------'	 	  	 
c		 write (95,*)  '  '	 	  	 
c		 write (95,*)  '  '	 	  	 

c         CLOSE(95)
         
c         OPEN(94,file='AA_R',form='formatted',access='append')
c         DO K=1,2*NREAC	 
c		 write (94,201)  GR(K)	 	  	 
c         END DO
c		 write (94,*)  '---------------------------------------------'	 	  	 
c		 write (94,*)  '  '	 	  	 
c		 write (94,*)  '  '	 	  	 

c         CLOSE(94)

C        DO J=1,NSPEC+1
C	     DO I=1,2*NREAC
C	         BSR(J,I)=BS(J,I)*GR(I)
C	     ENDDO
C	ENDDO

	 DO J=1,NSPEC+1
	      FI(4,J)=0.0D0
	      FI(3,J)=0.0D0
	      FI(2,J)=0.0D0
	      FI(1,J)=0.0D0
	      DO I=1,2*NREAC
		      FI(1,J)=FI(1,J)+BSR(J,I)
	              FI(2,J)=FI(2,J)+DABS(BSR(J,I))
		      IF (BSR(J,I).ge.0.0D0) FI(3,J)=FI(3,J)+BSR(J,I)
		      IF (BSR(J,I).lt.0.0D0) FI(4,J)=FI(4,J)+BSR(J,I)
	      ENDDO
	      xxx=1.0D0/FI(2,J)
	      DO I=1,2*NREAC
   	              BSRC(J,I)=BSR(J,I)
	              BSR(J,I)=BSR(J,I)*xxx
	      ENDDO
	 ENDDO
	 
CV      DO JJ=1,2*NREAC
CV        DO II=1,NSPEC
CV        write(*,*) 'S',RSCM(II,JJ),'WS',WRSCM(II,JJ),'BSR', BSRC(II,JJ)
CV        ENDDO
CV      ENDDO
      
cv      DO JJ=1,2*NREAC
cv        DO II=1,NSPEC
cv        write(*,*) 'BETTA',BETTA(II,JJ),'WS',
cv     &   'BSR', BSRC(II,JJ)
cv        ENDDO
cv      ENDDO

	 DO J=1,NSPEC+1	 
	      DO I=1,2*NREAC
	      BSR(J,I)=BSR(J,I)*DSIGN(1.D0,FI(1,J))
   	      BSRC(J,I)=BSRC(J,I)*DSIGN(1.D0,FI(1,J))
	      BS(J,I)=BS(J,I)*DSIGN(1.D0,FI(1,J))
	      ENDDO	
	      
	      DO I=1,NSPEC+1	 
	      ALPHA(I,J)=ALPHA(I,J)*DSIGN(1.D0,FI(1,J))	      
	      AHAT(I,J)=AHAT(I,J)*DSIGN(1.D0,FI(1,J))	      
	      BETTA(J,I)=BETTA(J,I)*DSIGN(1.D0,FI(1,J))
	      BHAT(J,I)=BHAT(J,I)*DSIGN(1.D0,FI(1,J))	      	      	      
	      ENDDO
	      IF (FI(1,J).lt.0.0D0) THEN
	          xxy=FI(3,J)
		  FI(3,J)=-FI(4,J)
		  FI(4,J)=-xxy
              ENDIF
	      FI(1,J)=FI(1,J)*DSIGN(1.D0,FI(1,J))
	 ENDDO
	 
	 
	 DO I=1,NSPEC+1	 
	    SUMH(I)=0.d0
	    DO J=4,5
	    SUMH(I)=SUMH(I)+ALPHA(I,J)*FI(1,J)
	    ENDDO
	 ENDDO
	 
	 CALL SMULT
     &    (NR2,NSPECMAX,NSPECMAX,RAJAC,ALPHA,GAA,(2*NREAC),
     &    NSPEC,NSPEC)

CJIM	 WRITE(95,101) XINDEX,SP,(G(I),SP,I=1,NSPEC)
CJIM	 WRITE(95,101) XINDEX,SP,(SUMH(I),SP,I=1,NSPEC)	 
	 	
C=============================GratesT (GRT)==============================
C	 WRITE(96,102) XINDEX,SP,(GRT(I),SP,I=1,2*NREAC)	 

      WRITE(96,101,ADVANCE = 'NO') XINDEX

      DO I = 1,2*NREAC
      WRITE(96,103,ADVANCE = 'NO') I, GRT(I)
      ENDDO

      CLOSE(96)

C	  RETURN

C     ------------------------------------------------------------------
C        CONSTRUCT THE AMPLITUDE-PARTICIPATION INDEX OF THE N-E MODES
C     ------------------------------------------------------------------
C
C=========================ModeParInd====================================
	 
	 DO J=1,NSPEC+1-NELEM
         NIT=10+J
         FLWR=10
         OPEN(91,FILE='HELP',STATUS='UNKNOWN')
         WRITE(91,*) J
         CLOSE (91)
         OPEN(91,FILE='HELP')         
         READ (91,*) CHELP
         CLOSE (91)
         
         FL_OUT(J)=('./DIAGN/ModeParInd.' // CHELP)
       
         IF(IT.EQ.1) THEN
         OPEN(FLWR,FILE=FL_OUT(J),FORM='FORMATTED',STATUS='UNKNOWN')
         ELSE
         OPEN(FLWR,FILE=FL_OUT(J),FORM='FORMATTED',ACCESS='APPEND')       
         ENDIF

C==========================write ModeParInd==============================
CJIM	      WRITE(74,104) XINDEX,SP,J,SP,(BSR(J,I),SP,I=1,2*NREAC)
C         WRITE(FLWR,104) XINDEX,SP,J,SP,(BSR(J,I),SP,I=1,2*NREAC)                
          
	 WRITE(FLWR,104,ADVANCE = 'NO') XINDEX, J
         DO I = 1,2*NREAC
          WRITE(FLWR,105,ADVANCE = 'NO') I, BSR(J,I)
         ENDDO    
         CLOSE(FLWR)

	ENDDO
C========================================================================




C=========================BSRs of Amplitudes=============================
	 
	 DO J=1,NSPEC+1-NELEM
         NIT=10+J
         FLWR=10
         OPEN(91,FILE='HELP',STATUS='UNKNOWN')
         WRITE(91,*) J
         CLOSE (91)
         OPEN(91,FILE='HELP')         
         READ (91,*) CHELP
         CLOSE (91)
         
         FL_OUT(J)=('./DIAGN/BSRs.' // CHELP)
       
         IF(IT.EQ.1) THEN
         OPEN(FLWR,FILE=FL_OUT(J),FORM='FORMATTED',STATUS='UNKNOWN')
         ELSE
         OPEN(FLWR,FILE=FL_OUT(J),FORM='FORMATTED',ACCESS='APPEND')       
         ENDIF

C==========================write BSRs====================================
          
	 WRITE(FLWR,104,ADVANCE = 'NO') XINDEX, J
         DO I = 1,2*NREAC
          WRITE(FLWR,105,ADVANCE = 'NO') I, BSRC(J,I)
         ENDDO    
         CLOSE(FLWR)

	ENDDO
C========================================================================


C==========================Amplitudes====================================
C	 WRITE(77,115) XINDEX,SP,(FI(1,J),SP,J=1,NSPEC+1-NELEM)

	 WRITE(77,101,ADVANCE = 'NO') XINDEX
         DO J = 1,NSPEC+1
          WRITE(77,103,ADVANCE = 'NO') J, FI(1,J)
         ENDDO    
         CLOSE(77)

C========================================================================

      
	 
C     ------------------------------------------------------------------
C        CONSTRUCT THE EIGENVALUE-PARTICIPATION INDEX OF THE N-E MODES
C     ------------------------------------------------------------------
C

      DO I=1,NSPEC+1-NELEM
              XXX=0.0D0
              xxy=0.0d0
              TEMP2(I)=0.0d0
              TEMP3(I)=0.0d0
                      
              DO J=1,2*NREAC
                  XXX=XXX+DABS(BSE(I,J))
                  xxy=xxy+bse(i,j)
	      IF (BSE(I,J).ge.0.0D0) TEMP2(I)=TEMP2(I)+BSE(I,J)
              IF (BSE(I,J).lt.0.0D0) TEMP3(I)=TEMP3(I)+BSE(I,J)
              ENDDO
              temp1(i)=xxy
              xxy=TEMP2(I)+DABS(TEMP3(I))
              TEMP2(I)=TEMP2(I)/(xxy+1.d-30)
              TEMP3(I)=TEMP3(I)/(xxy+1.d-30)
              
              XXX=1.0D0/XXX
              DO J=1,2*NREAC
              		   BSEC(I,J)=BSE(I,J)
                       BSE(I,J)=BSE(I,J)*XXX
              ENDDO
      ENDDO
      
C==========================EigParInd====================================

      DO J=1,NSPEC+1-NELEM
         NIT=20+J
         FLWR=20
         OPEN(91,FILE='HELP',STATUS='UNKNOWN')
         WRITE(91,*) J
         CLOSE (91)
         OPEN(91,FILE='HELP')         
         READ (91,*) CHELP
         CLOSE (91)
         
         FL_OUT(J)=('./DIAGN/EigeParInd.' // CHELP)

         IF(IT.EQ.1) THEN
         OPEN(FLWR,FILE=FL_OUT(J),FORM='FORMATTED',STATUS='UNKNOWN')
         ELSE
         OPEN(FLWR,FILE=FL_OUT(J),FORM='FORMATTED',ACCESS='APPEND')       
         ENDIF


C======================write EigParInd==================================

        WRITE(FLWR,104,ADVANCE = 'NO') XINDEX, J
        DO I = 1,2*NREAC
        WRITE(FLWR,105,ADVANCE = 'NO') I, BSE(J,I)
        ENDDO
        WRITE(FLWR,106) REIM(J,1), REIM(J,2), TEMP1(J)

        CLOSE(FLWR)
C=======================================================================
        ENDDO
   




C==========================C's of EIGENVALUES==============================

      DO J=1,NSPEC+1-NELEM
         NIT=20+J
         FLWR=20
         OPEN(91,FILE='HELP',STATUS='UNKNOWN')
         WRITE(91,*) J
         CLOSE (91)
         OPEN(91,FILE='HELP')         
         READ (91,*) CHELP
         CLOSE (91)
         
         FL_OUT(J)=('./DIAGN/Cs.' // CHELP)

         IF(IT.EQ.1) THEN
         OPEN(FLWR,FILE=FL_OUT(J),FORM='FORMATTED',STATUS='UNKNOWN')
         ELSE
         OPEN(FLWR,FILE=FL_OUT(J),FORM='FORMATTED',ACCESS='APPEND')       
         ENDIF

C         WRITE(75,105) XINDEX,SP,J,SP,(BSE(J,I),SP,I=1,2*NREAC),
C     1              temp1(j),SP,REIM(J,1),SP,REIM(J,2)


C==========================WRITE C's====================================
C        WRITE(FLWR,105) XINDEX,SP,J,SP,(BSE(J,I),SP,I=1,2*NREAC),
C     1              temp1(j),SP,REIM(J,1),SP,REIM(J,2)   

        WRITE(FLWR,104,ADVANCE = 'NO') XINDEX, J
        DO I = 1,2*NREAC
        WRITE(FLWR,105,ADVANCE = 'NO') I, BSEC(J,I)
        ENDDO
        CLOSE(FLWR)
        
      ENDDO
C=======================================================================             








CC     ------------------------------------------------------------------
CC        CONSTRUCT THE POS-NEG CONTR. OF EIGENVALUE-PARTICIPATION INDEX 
CC                                 OF THE N-E MODES
CC     ------------------------------------------------------------------
CC      
      DO J=1,NSPEC+1-NELEM
         NIT=20+J
         FLWR=40
         OPEN(91,FILE='HELP',STATUS='UNKNOWN')
         WRITE(91,*) J
         CLOSE (91)
         OPEN(91,FILE='HELP')         
         READ (91,*) CHELP
         CLOSE (91)
         
         FL_OUT(J)=('./DIAGN/SIGMAS.' // CHELP)

         IF(IT.EQ.1) THEN
         OPEN(FLWR,FILE=FL_OUT(J),FORM='FORMATTED',STATUS='UNKNOWN')
         ELSE
         OPEN(FLWR,FILE=FL_OUT(J),FORM='FORMATTED',ACCESS='APPEND')       
         ENDIF

CC         WRITE(75,105) XINDEX,SP,J,SP,(BSE(J,I),SP,I=1,2*NREAC),
CC     1              temp1(j),SP,REIM(J,1),SP,REIM(J,2)
         WRITE(FLWR,205) XINDEX,SP,J,SP,TEMP1(j),SP,TEMP2(j),
     1                   SP,TEMP3(J) 
        
        CLOSE(FLWR)
             
      ENDDO

C     ------------------------------------------------------------------
C        CONSTRUCT THE CSP POINTER
C     ------------------------------------------------------------------
C
         DO I=1,NSPEC+1-NELEM
             DO J=1,NSPEC+1
                 POINT(I,J)=BETTA(I,J)*ALPHA(J,I)
             ENDDO
         ENDDO
         DO J=1,NSPEC+1-NELEM
         NIT=30+J
         FLWR=30
         OPEN(91,FILE='HELP',STATUS='UNKNOWN')
         WRITE(91,*) J
         CLOSE (91)
         OPEN(91,FILE='HELP')         
         READ (91,*) CHELP
         CLOSE (91)
         
         FL_OUT(J)=('./DIAGN/Pointer.' // CHELP)

         IF(IT.EQ.1) THEN
         OPEN(FLWR,FILE=FL_OUT(J),FORM='FORMATTED',STATUS='UNKNOWN')
         ELSE
         OPEN(FLWR,FILE=FL_OUT(J),FORM='FORMATTED',ACCESS='APPEND')       
         ENDIF

C============================Pointer====================================
CJIM              WRITE(76,106) XINDEX,SP,J,SP,(POINT(J,I),SP,I=1,NSPEC)
C              WRITE(FLWR,106) XINDEX,SP,J,SP,(POINT(J,I),SP,I=1,NSPEC+1)

         WRITE(FLWR,104,ADVANCE = 'NO') XINDEX, J
         DO I = 1,NSPEC+1
           WRITE(FLWR,105,ADVANCE = 'NO') I, POINT(J,I)
         ENDDO
         CLOSE(FLWR)
C=======================================================================              
         ENDDO  
         
         DO I=1,NSPEC+1-NELEM
             DO J=1,NSPEC+1
                AY(J,I)=ALPHA(J,I)/Y(J)
                BY(I,J)=BETTA(I,J)*Y(J)
             ENDDO
         ENDDO
CJIM      DO J=1,NSPEC-NELEM
CJIM         WRITE(81,114) XINDEX,SP,J,sp,(AY(I,J), sp,I=1,NSPEC)
CJIM         WRITE(82,114) XINDEX,SP,J,sp,(BY(J,I), sp,I=1,NSPEC)    
CJIM      END DO
c	  RETURN
C     ------------------------------------------------------------------
C        CONSTRUCT THE CSP REACTIONS
C     ------------------------------------------------------------------
CJIM      DO J=1,NSPEC
CJIM         WRITE(86,114) XINDEX,SP,J,sp,(ALPHA(I,J), sp,I=1,NSPEC)
CJIM         WRITE(87,114) XINDEX,SP,J,sp,(BETTA(J,I), sp,I=1,NSPEC)         
CJIM      END DO
CJIM
CJIM      DO J=1,NSPEC-NELEM
CJIM         WRITE(78,114) XINDEX,SP,J,sp,(AHAT(I,J), sp,I=1,NSPEC)
CJIM         WRITE(79,114) XINDEX,SP,J,sp,(BHAT(J,I), sp,I=1,NSPEC)  
CJIM      END DO
      
C     ------------------------------------------------------------------
C        COMPUTE No. EXHAUSTED MODES, M
C     ------------------------------------------------------------------

       DO I=1,NSPEC
            YERROR(I)=RTOLCSP*Y(I)+ATOLCSP
       ENDDO
       M=0
             
1999   CONTINUE       
       
       M1=M+1
       M2=M+2
       DO I=1,NSPEC
            XTEMP(I)=0.0d0
       ENDDO

          DO I=1,M1
              DO J=1,NSPEC
                XTEMP(J)=XTEMP(J)+ALPHA(J,I)*FI(1,I)
              ENDDO
          ENDDO
          DO J=1,NSPEC
             XTEMP(J)=XTEMP(J)/RLMOD(M2)
          ENDDO
          
C         WRITE(84,114) XINDEX,SP,M,sp,(FI(1,I),sp,I=1,M1),
C       1              1.0d0/RLMOD(M2)
C         WRITE(84,114) XINDEX,SP,M,sp,(YERROR(I), sp,I=1,NSPEC)
C         WRITE(84,114) XINDEX,SP,M,sp,(XTEMP(I), sp,I=1,NSPEC)  
          
          INDEXM=0
          DO J=1,NSPEC
               if (DABS(XTEMP(J)).lt.YERROR(J)) INDEXM=INDEXM+1
          ENDDO
        IF (INDEXM.eq.NSPEC) THEN
          M=M+1
          GOTO 1999
        ELSE 
          CONTINUE
        ENDIF
           return
CJIM        WRITE(84,116)  XINDEX,SP,M

CJIM         CALL SMULT
CJIM     &    (NSPECMAX,NSPECMAX,NR2,BHAT,RSCM,BHS,NSPEC,NSPEC,(2*NREAC))
CJIM 
CJIM         DO J=1,NSPEC-NELEM
CJIM         WRITE(88,104) XINDEX,SP,J,SP,(BHS(J,I),SP,I=1,2*NREAC)
CJIM         ENDDO
CJIMC
CJIMC     ------------------------------------------------------------------
CJIMC        CONSTRUCT THE IMPORTANCE INDEX OF THE N SPECIES
CJIMC     ------------------------------------------------------------------
CJIMC       K=0
CJIMC        DO I=M+1,NSPEC-NELEM
CJIMC             K=K+1
CJIMC            DO J=1,NSPEC
CJIMC               AHELP(J,K)=ALPHA(J,I)
CJIMC               BHELP(K,J)=BETTA(I,J)
CJIMC            ENDDO
CJIMC        ENDDO
CJIMC         
CJIMC         CALL SMULT
CJIMC     &    (NSPECMAX,NSPECMAX,NSPECMAX,AHELP,BHELP,AN,NSPEC,
CJIMC     &     NSPEC-NELEM-M,NSPEC)
CJIMC     
CJIMC         CALL SMULT
CJIMC     &    (NSPECMAX,NSPECMAX,NSPECMAX,AN,WW,ANW,NSPEC,
CJIMC     &     NSPEC,NSPEC)
CJIMC     
CJIMC         CALL SMULT
CJIMC     &    (NSPECMAX,NSPECMAX,NR2,ANW,RSCM,ANWS,NSPEC,
CJIMC     &     NSPEC,(2*NREAC))
CJIM         CALL SMULT
CJIM     &    (NSPECMAX,NSPECMAX,NSPECMAX,ALPHA(1,M+1),BS(M+1,1),ANWS,NSPEC,
CJIM     &     NSPEC-NELEM-M,(2*NREAC))
CJIM         
CJIM         DO K=1,NSPEC
CJIM            Z(K)=Y(K)             ! SPECIES MASS FRACTIONS.
CJIM         END DO
CJIM            TEMP=TEMPR
CJIM            
CJIM         CALL GRATES_D(Z,GR)
CJIM         
CJIM        DO J=1,NSPEC
CJIM              FI(6,J)=0.0D0
CJIM              FI(5,J)=0.0D0
CJIM
CJIM             DO I=1,2*NREAC
CJIM               ANWR(J,I)=ANWS(J,I)*GR(I)
CJIM               WSR(J,I)=WRSCM(J,I)*GR(I)
CJIM                             
CJIM               IF (WSR(J,I).GE.0.0D0) FI(5,J)=FI(5,J)+WSR(J,I)
CJIM               IF (WSR(J,I).LT.0.0D0) FI(6,J)=FI(6,J)+WSR(J,I)
CJIM
CJIM             ENDDO
CJIM             FI(7,J)=DABS((FI(5,J)+FI(6,J))/(FI(6,J)+SMALL))
CJIM        ENDDO
CJIM         DO J=1,NSPEC
CJIM              AIMP(J)=0.0D0
CJIM              GAIMP(J)=0.0D0
CJIM              DO I=1,2*NREAC
CJIM                      AIMP(J)=AIMP(J)+DABS(ANWR(J,I))
CJIM                      GAIMP(J)=GAIMP(J)+ANWR(J,I)
CJIM              ENDDO
CJIM              xxx=1.0D0/AIMP(J)
CJIM              DO I=1,2*NREAC
CJIM                      ANWR(J,I)=ANWR(J,I)*xxx
CJIM              ENDDO
CJIM         ENDDO
CJIM         
CJIM       DO J=1,NSPEC
CJIM       FLWR=10
CJIM       FL_OUT(J)=('./DIAGN/ImpInd.' // KNAME(J))
CJIM       
CJIM       IF(IT.EQ.1) THEN
CJIM       OPEN(FLWR,FILE=FL_OUT(J),FORM='FORMATTED',STATUS='UNKNOWN')
CJIM       ELSE
CJIM       OPEN(FLWR,FILE=FL_OUT(J),FORM='FORMATTED',ACCESS='APPEND')       
CJIM       ENDIF
CJIM       
CJIM           WRITE(85,104) XINDEX,SP,J,SP,(ANWR(J,I),SP,I=1,2*NREAC)
CJIM           WRITE(FLWR,104) XINDEX,SP,J,SP,(ANWR(J,I),SP,I=1,2*NREAC)                                          
CJIM             
CJIM       CLOSE(FLWR)
CJIM       ENDDO
CJIM        
CJIM       WRITE(90,101) XINDEX,SP,(GAIMP(I),SP,I=1,NSPEC)
CJIM       
CJIM       WRITE(89,115) XINDEX,SP,(FI(7,J),SP,J=1,NSPEC)
CJIM 
CJIM                
CJIMCJIM       CLOSE(99)
CJIMCJIM       CLOSE(71)
       CLOSE(72)
       CLOSE(73)
CJIMCJIM       CLOSE(74)
CJIMCJIM       CLOSE(75)
CJIMCJIM       CLOSE(76)
       CLOSE(77)
CJIMCJIM       CLOSE(78)
CJIMCJIM       CLOSE(79)
CJIMCJIM       CLOSE(80)
CJIMCJIM       CLOSE(81)
CJIMCJIM       CLOSE(82)
       CLOSE(83)
CJIM       CLOSE(84)
CJIM       CLOSE(85)
CJIM       CLOSE(86)
CJIM       CLOSE(87)
CJIM       CLOSE(88)
CJIM       CLOSE(89)
CJIM       CLOSE(95)
       CLOSE(96)


*
*     *----------------------------------------------------------------*
100   FORMAT(1X,A75)
101   FORMAT(1X, E23.16, 5X)
102   FORMAT(I5, 5X, E23.16, 5X, E17.10, 5X)
103   FORMAT(I5, 5X, E26.19, 5X)
104   FORMAT(1X, D17.10, 5X, I5, 5X)
105   FORMAT(I5, 5X, D26.19, 5X)
106   FORMAT(D13.6, 5X, D13.6, 5X, D13.6)
C101   FORMAT(1X,D17.10,A1, 800(D13.6,A1))
C102   FORMAT(1X,D17.10,A1,1600(D13.6,A1))
C103   FORMAT(1X,D17.10,A1,1600(D13.6,A1))
C104   FORMAT(1X,D17.10,A1,I5,A1,1600(D13.6,A1))
205   FORMAT(1X,D17.10,A1,I5,A1,1600(D13.6,A1))
C106   FORMAT(1X,D17.10,A1,I5,A1, 800(D13.6,A1))
107   FORMAT('LENIWK=',I6)
108   FORMAT('LENRWK=',I6)
109   FORMAT('LENCWK=',I6)
110   FORMAT('NGPNTMAX=',I6)
111   FORMAT('NELEMMAX=',I6)
112   FORMAT('NSPECMAX=',I6)
113   FORMAT('NREACMAX=',I6)
114   FORMAT(1X,D17.10,A1,I5,A1,800(D13.6,A1))
115   FORMAT(1X,D17.10,A1,800(D13.6,A1))
116   FORMAT(1X,D17.10,A1,I6)

200   FORMAT(1X,400(E13.6,1X))
201   FORMAT(1X,700(E13.6,1X))
*
*     *----------------------------------------------------------------*
       RETURN
       END
